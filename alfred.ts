// Subtypes
type Connections = {
  icon: Array<IconNode>;
  [key: string]: Array<ConnectionNode>;
};

type ConnectionNode = {
  destinationuid: string;
  disabled: boolean;
  modifiers: number;
  modifiersubtext: string;
  sourceoutputuid: string;
  vitoclose: boolean;
};

type IconNode = {
  destinationuid: string;
  modifiers: number;
  modifiersubtext: string;
  vitoclose: boolean;
};

type ObjectConfig = {
  acceptsfiles: boolean;
  acceptsmulti: boolean;
  acceptstext: boolean;
  acceptsurls: boolean;
  action: string;
  addfilestobuffer: boolean;
  adduuid: boolean;
  alfredfiltersresults: boolean;
  alfredfiltersresultsmatchmode: string;
  alignment: string;
  allowemptyfiles: boolean;
  anchorfields: string;
  applescript: string;
  argument: string;
  argumenttext: string;
  argumenttreatemptyqueryasnil: boolean;
  argumenttrimmode: string;
  argumenttype: string;
  autopaste: boolean;
  availableviaurlhandler: boolean;
  backgroundcolor: string;
  behaviour: string;
  browser: string;
  button1: string;
  button2: string;
  button3: string;
  cachescript: boolean;
  clearbuffer: boolean;
  cleardebuggertext: string;
  clipboardtext: string;
  columncount: number;
  command: string;
  concurrently: boolean;
  conditions: Array<Condition>;
  confirm: string;
  count: number;
  createintermediatefolders: boolean;
  daterange: string;
  delimiter: string;
  description: string;
  discardemptyarguments: boolean;
  displaymode: string;
  elselabel: string;
  escaping: string;
  expression: string;
  externaltriggerid: string;
  fadespeed: number;
  fields: Array<Field>;
  filename: string;
  filetext: string;
  filetypes: Array<string>;
  fileutivariablename: string;
  fillmode: string;
  filterable: boolean;
  fixedorder: boolean;
  focusedappvariable: string;
  focusedappvariablename: string;
  font: string;
  fontmode: string;
  fontsizing: string;
  footertext: string;
  hideelse: boolean;
  hotkey: string;
  hotmod: string;
  hotstring: string;
  ignoredynamicplaceholders: boolean;
  imageaspect: string;
  imageresizemode: string;
  includesystem: boolean;
  inputfile: string;
  inputmode: string;
  inputstring: string;
  inputtype: string;
  items: string;
  json: string;
  jumpto: string;
  keychar: string;
  keycode: string;
  keymod: string;
  keyword: string;
  language: string;
  largetypetext: string;
  lastpathcomponent: string;
  leftcursor: boolean;
  limit: number;
  loadingtext: string;
  matchcasesensitive: boolean;
  matchmode: string;
  matchstring: string;
  modsmode: string;
  name: string;
  onlyshowifquerypopulated: boolean;
  openwith: string;
  outputas: string;
  outputfileuti: string;
  outputmode: string;
  outputtype: string;
  overridewithargument: boolean;
  passinputasargument: boolean;
  passthroughargument: boolean;
  passvariables: Array<{ [variableKey: string]: any }>;
  path: string;
  paths: Array<string>;
  processoutputs: boolean;
  queuedelaycustom: boolean;
  queuedelayimmediatelyinitially: boolean;
  queuedelaymode: string;
  queuemode: string;
  regexcaseinsensitive: boolean;
  regexmultiline: boolean;
  relatedApps: Array<string>;
  relatedAppsMode: string;
  relativepathmode: string;
  removeextension: boolean;
  replacestring: string;
  runningsubtext: string;
  scopes: Array<string>;
  script: string;
  scriptargtype: string;
  scriptfile: string;
  scriptinput: string;
  searcher: string;
  seconds: number;
  shortcut: string;
  showallwords: boolean;
  showsubtitles: boolean;
  showtitles: boolean;
  skipqueryencode: boolean;
  skipuniversalaction: boolean;
  skipvarencode: boolean;
  sortBy: string;
  sortDirection: string;
  sortFoldersAtTop: boolean;
  sortOverride: boolean;
  sortmode: string;
  soundname: string;
  sourcefile: string;
  spaces: boolean;
  spellchecking: boolean;
  stackBrowserView: boolean;
  stackview: boolean;
  subtext: string;
  subtitlesinfooter: boolean;
  systemsound: string;
  tasksettings: TaskSettings;
  taskuid: string;
  text: string;
  textcolor: string;
  title: string;
  titlesinfooter: boolean;
  toggle: boolean;
  transient: boolean;
  triggerid: string;
  triggername: string;
  trimarguments: boolean;
  type: string;
  types: Array<string>;
  unstackview: boolean;
  url: string;
  usevoiceover: boolean;
  utf8: boolean;
  variableprefix: string;
  variables: { [variableKey: string]: any };
  withspace: boolean;
  words: string;
  wordseparatortype: string;
  workflowbundleid: string;
  workflowonly: boolean;
  wrapat: number;
};

type TaskSettings = {
  allow_empty: boolean;
  app_list: Array<string>;
  arguments_number: number;
  height: number;
  javascript_code: string;
  match_string: string;
  max_size: number;
  menubar_items: Array<string>;
  metric: string;
  new_tags: Array<string>;
  no_extension: boolean;
  out_format: string;
  overwrite: boolean;
  percentage: number;
  period: string;
  preset: string;
  recursive: boolean;
  regex: string;
  save_in: string;
  sort_order: string;
  target_app: string;
  target_mode: string;
  target_path: string;
  target_screen: string;
  target_shortcut: string;
  trailing: boolean;
  unit: string;
  use_finder: boolean;
  width: number;
  x: number;
  y: number;
};

type Field = {
  field: string;
  not: boolean;
  split: string;
  value: string;
  words: string;
};

type Condition = {
  inputstring: string;
  matchcasesensitive: boolean;
  matchmode: string;
  matchstring: string;
  outputlabel: string;
  uid: string;
};

type InboundConfig = {
  custominputarg: string;
  externalid: string;
  inputmode: string;
  usecustominputarg: boolean;
};

// Main Type
export type AlfredWorkflow = {
  version: string;
  webaddress: string;
  bundleid: string;
  category: string;
  connections: Connections;
  createdby: string;
  description: string;
  disabled: boolean;
  name: string;
  objects: Array<{
    config: ObjectConfig;
    inboundconfig: InboundConfig;
    type: string;
    uid: string;
    version: string;
  }>;
  readme: string;
  uidata: {
    [key: string]: {
      colorindex: number;
      note: string;
      xpos: number;
      ypos: number;
      icon?: {
        xpos: number;
        ypos: number;
      };
    };
  };
  userconfigurationconfig: Array<{
    config: {
      default: any;
      defaultvalue: any;
      filtermode: string;
      markercount: number;
      maxvalue: number;
      minvalue: number;
      onlystoponmarkers: boolean;
      pairs: Array<{ [key: string]: any }>;
      placeholder: string;
      required: boolean;
      showmarkers: boolean;
      text: string;
      trim: boolean;
      verticalsize: number;
    };
    description: string;
    label: string;
    type: string;
    variable: string;
  }>;
  variables: { [variableKey: string]: any };
  variablesdontexport: Array<any>;
};
